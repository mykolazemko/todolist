[{"/home/jsp/Documents/todolist/src/index.js":"1","/home/jsp/Documents/todolist/src/App.js":"2","/home/jsp/Documents/todolist/src/components/Notes.jsx":"3","/home/jsp/Documents/todolist/src/components/Counter/Counter.jsx":"4","/home/jsp/Documents/todolist/src/components/InputForm/InputForm.jsx":"5","/home/jsp/Documents/todolist/src/components/Note.jsx":"6","/home/jsp/Documents/todolist/src/components/Fetch/Fetch.jsx":"7"},{"size":185,"mtime":1633690542209,"results":"8","hashOfConfig":"9"},{"size":460,"mtime":1633692114917,"results":"10","hashOfConfig":"9"},{"size":1524,"mtime":1633690542209,"results":"11","hashOfConfig":"9"},{"size":665,"mtime":1633690542209,"results":"12","hashOfConfig":"9"},{"size":3702,"mtime":1633691138013,"results":"13","hashOfConfig":"9"},{"size":727,"mtime":1633690542209,"results":"14","hashOfConfig":"9"},{"size":1015,"mtime":1633697252588,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"rld8wj",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jsp/Documents/todolist/src/index.js",[],["35","36"],"/home/jsp/Documents/todolist/src/App.js",["37","38","39","40"],"import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Notes from './components/Notes';\r\nimport Counter from './components/Counter/Counter'\r\nimport InputForm from './components/InputForm/InputForm';\r\nimport Fetch from './components/Fetch/Fetch';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nconst App = () => {\r\n  return(\r\n    <div>\r\n      <Fetch />\r\n    </div>\r\n  )\r\n}\r\nReactDOM.render(App, document.getElementById('root'));\r\n\r\nexport default App;\r\n","/home/jsp/Documents/todolist/src/components/Notes.jsx",["41"],"import React, { useState, useEffect } from 'react';\r\nimport Note from './Note';\r\n\r\nconst handleSubmit = (e, notes, setNotes, input, setInput) => {\r\n    e.preventDefault()\r\n    const id = (notes.length) ? notes[notes.length-1].id+1 : 0\r\n    setNotes([...notes, { id: id, message: input, done: false}])\r\n    setInput('')\r\n}\r\n\r\nconst deleteNote = (id, notes, setNotes) => {\r\n    setNotes(notes.filter(note => note.id !== id))\r\n}\r\n\r\nconst isDone = (id, notes, setNotes) => {\r\n    const index = notes.map(note => note.id).indexOf(id);    \r\n    notes[index].done !== true ? notes[index].done = true : deleteNote(id, notes, setNotes)\r\n}\r\n\r\nconst Notes = () => {\r\n    const [notes, setNotes] = useState([]);\r\n    const [input, setInput] = useState('');\r\n   \r\n    return (\r\n        <div>\r\n            <form onSubmit={(e) => handleSubmit(e, notes, setNotes, input, setInput)}>\r\n                <input type=\"text\"\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        value={input}\r\n                        placeholder=\"AddNew\"/>\r\n                <button>Add</button>\r\n            </form>\r\n            {notes.map(note =>\r\n                <Note message={note.message}\r\n                      id={note.id}\r\n                      key={note.id}\r\n                      deleteNote={(id) => deleteNote(id, notes, setNotes)}\r\n                      isDone={(id) => isDone(id, notes, setNotes)}\r\n                      notes={notes}/>\r\n            )}\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notes","/home/jsp/Documents/todolist/src/components/Counter/Counter.jsx",["42"],"import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n    const Counter = () => {\r\n        const [state, setState] = useState('T_T')\r\n       let x = {done:false}\r\n       console.log(x.done)\r\n              \r\n       const done = () => {\r\n           x.done=true;\r\n           console.log(x.done)\r\n       }\r\n\r\n       const Element = () => <div>\r\n           <button>{x.done ? setState(\"true\") : setState(\"false\")}</button>\r\n          \r\n       </div>\r\n       return (\r\n           <div>\r\n               <button onClick={() => done()}>{state}</button>\r\n               <Element />\r\n           </div>\r\n       )\r\n      \r\n    }\r\n\r\nexport default Counter","/home/jsp/Documents/todolist/src/components/InputForm/InputForm.jsx",[],"/home/jsp/Documents/todolist/src/components/Note.jsx",["43"],"import React, {useState} from 'react';\r\n\r\nconst Note = ({ message , id, notes, deleteNote, isDone }) => {\r\n    const [state, setState] = useState('4');\r\n   \r\n    const DelBtn = () => <div>\r\n        {\r\n\r\n\r\n        notes[id].done ?\r\n        <button onClick={() => deleteNote(id)}>X</button> :\r\n        <button onClick={() => {isDone(id); setState('DonE')}}>V</button>\r\n        }\r\n            \r\n     \r\n    </div>\r\n        \r\n    return (\r\n        <div className=\"note\">\r\n            <p className=\"todo-item\">{message} | {id}</p>\r\n            <button onClick={() => deleteNote(id)}>Delete</button>\r\n            <button onClick={() => isDone(id)}>Done</button>\r\n            <DelBtn />\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Note","/home/jsp/Documents/todolist/src/components/Fetch/Fetch.jsx",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":25},{"ruleId":"48","severity":1,"message":"52","line":3,"column":8,"nodeType":"50","messageId":"51","endLine":3,"endColumn":13},{"ruleId":"48","severity":1,"message":"53","line":4,"column":8,"nodeType":"50","messageId":"51","endLine":4,"endColumn":15},{"ruleId":"48","severity":1,"message":"54","line":5,"column":8,"nodeType":"50","messageId":"51","endLine":5,"endColumn":17},{"ruleId":"48","severity":1,"message":"55","line":1,"column":27,"nodeType":"50","messageId":"51","endLine":1,"endColumn":36},{"ruleId":"48","severity":1,"message":"56","line":2,"column":8,"nodeType":"50","messageId":"51","endLine":2,"endColumn":16},{"ruleId":"48","severity":1,"message":"57","line":4,"column":12,"nodeType":"50","messageId":"51","endLine":4,"endColumn":17},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Notes' is defined but never used.","'Counter' is defined but never used.","'InputForm' is defined but never used.","'useEffect' is defined but never used.","'ReactDOM' is defined but never used.","'state' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]