[{"D:\\MKL\\todolist\\src\\index.js":"1","D:\\MKL\\todolist\\src\\App.js":"2","D:\\MKL\\todolist\\src\\components\\Notes.jsx":"3","D:\\MKL\\todolist\\src\\components\\Counter\\Counter.jsx":"4","D:\\MKL\\todolist\\src\\components\\Note.jsx":"5","D:\\MKL\\todolist\\src\\components\\InputForm\\InputForm.jsx":"6"},{"size":185,"mtime":1612991629705,"results":"7","hashOfConfig":"8"},{"size":2229,"mtime":1633371985156,"results":"9","hashOfConfig":"8"},{"size":1524,"mtime":1612991629705,"results":"10","hashOfConfig":"8"},{"size":665,"mtime":1612991629705,"results":"11","hashOfConfig":"8"},{"size":727,"mtime":1612991629705,"results":"12","hashOfConfig":"8"},{"size":1906,"mtime":1633375594266,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1qa0el",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\MKL\\todolist\\src\\index.js",[],["31","32"],"D:\\MKL\\todolist\\src\\App.js",["33","34","35"],"import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Notes from './components/Notes';\r\nimport Counter from './components/Counter/Counter'\r\nimport InputForm from './components/InputForm/InputForm';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nconst App = () => {\r\n  return(\r\n    <div>\r\n      <InputForm />\r\n    </div>\r\n  )\r\n}\r\nReactDOM.render(App, document.getElementById('root'));\r\n\r\n// class App extends React.Component {\r\n//   constructor() {\r\n//     super();\r\n//     this.state = {\r\n//       tasks: [\r\n//         { id: 0, title: 'title_1', done: false },\r\n//         { id: 1, title: 'title_2', done: true },\r\n//         { id: 2, title: 'title_3', done: false },\r\n//       ]\r\n//     }\r\n//   }\r\n\r\n//   addTask = (task) => {\r\n//     this.setState(state => {\r\n//       let { tasks } = state;\r\n//       tasks.push({\r\n//         id: tasks.length != 0 ? tasks.length : 0,\r\n//         title: task,\r\n//         done: false\r\n//       });\r\n//       console.log(this.state);\r\n//       console.log(tasks)\r\n//       return tasks\r\n//     });\r\n//   };\r\n\r\n//   doneTask = (id) => {\r\n//     const index = this.state.tasks.map(task => task.id).indexOf(id);\r\n//     this.setState(state => {\r\n//       let { tasks } = state;\r\n//       tasks[index].done = true;\r\n//       return tasks\r\n//     });\r\n//   };\r\n\r\n//   deleteTask = (id) => {\r\n//     const index = this.state.tasks.map(task => task.id).indexOf(id);\r\n//     this.setState(state => {\r\n//       let { tasks } = state;\r\n//       delete tasks[index];\r\n//       return tasks\r\n//     })\r\n//   }\r\n\r\n//   render() {\r\n//     const { tasks } = this.state;\r\n//     const activeTasks = tasks.filter(task => !task.done);\r\n//     const doneTasks = tasks.filter(task => task.done);\r\n\r\n//     return (\r\n//       <div>\r\n//         <h2>Active Todos: {activeTasks.length}</h2>\r\n//         <TaskInput addTask={this.addTask}></TaskInput>\r\n//         {[...activeTasks, ...doneTasks].map(task =>\r\n//           <Task\r\n//             doneTask={() => this.doneTask(task.id)}\r\n//             deleteTask={() => this.deleteTask(task.id)}\r\n//             task={task}\r\n//             key={task.id} />\r\n//         )}\r\n\r\n//         <Counter />\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\nexport default App;\r\n","D:\\MKL\\todolist\\src\\components\\Notes.jsx",["36"],"import React, { useState, useEffect } from 'react';\r\nimport Note from './Note';\r\n\r\nconst handleSubmit = (e, notes, setNotes, input, setInput) => {\r\n    e.preventDefault()\r\n    const id = (notes.length) ? notes[notes.length-1].id+1 : 0\r\n    setNotes([...notes, { id: id, message: input, done: false}])\r\n    setInput('')\r\n}\r\n\r\nconst deleteNote = (id, notes, setNotes) => {\r\n    setNotes(notes.filter(note => note.id !== id))\r\n}\r\n\r\nconst isDone = (id, notes, setNotes) => {\r\n    const index = notes.map(note => note.id).indexOf(id);    \r\n    notes[index].done !== true ? notes[index].done = true : deleteNote(id, notes, setNotes)\r\n}\r\n\r\nconst Notes = () => {\r\n    const [notes, setNotes] = useState([]);\r\n    const [input, setInput] = useState('');\r\n   \r\n    return (\r\n        <div>\r\n            <form onSubmit={(e) => handleSubmit(e, notes, setNotes, input, setInput)}>\r\n                <input type=\"text\"\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        value={input}\r\n                        placeholder=\"AddNew\"/>\r\n                <button>Add</button>\r\n            </form>\r\n            {notes.map(note =>\r\n                <Note message={note.message}\r\n                      id={note.id}\r\n                      key={note.id}\r\n                      deleteNote={(id) => deleteNote(id, notes, setNotes)}\r\n                      isDone={(id) => isDone(id, notes, setNotes)}\r\n                      notes={notes}/>\r\n            )}\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notes","D:\\MKL\\todolist\\src\\components\\Counter\\Counter.jsx",["37"],"import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n    const Counter = () => {\r\n        const [state, setState] = useState('T_T')\r\n       let x = {done:false}\r\n       console.log(x.done)\r\n              \r\n       const done = () => {\r\n           x.done=true;\r\n           console.log(x.done)\r\n       }\r\n\r\n       const Element = () => <div>\r\n           <button>{x.done ? setState(\"true\") : setState(\"false\")}</button>\r\n          \r\n       </div>\r\n       return (\r\n           <div>\r\n               <button onClick={() => done()}>{state}</button>\r\n               <Element />\r\n           </div>\r\n       )\r\n      \r\n    }\r\n\r\nexport default Counter","D:\\MKL\\todolist\\src\\components\\Note.jsx",["38"],"import React, {useState} from 'react';\r\n\r\nconst Note = ({ message , id, notes, deleteNote, isDone }) => {\r\n    const [state, setState] = useState('4');\r\n   \r\n    const DelBtn = () => <div>\r\n        {\r\n\r\n\r\n        notes[id].done ?\r\n        <button onClick={() => deleteNote(id)}>X</button> :\r\n        <button onClick={() => {isDone(id); setState('DonE')}}>V</button>\r\n        }\r\n            \r\n     \r\n    </div>\r\n        \r\n    return (\r\n        <div className=\"note\">\r\n            <p className=\"todo-item\">{message} | {id}</p>\r\n            <button onClick={() => deleteNote(id)}>Delete</button>\r\n            <button onClick={() => isDone(id)}>Done</button>\r\n            <DelBtn />\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Note","D:\\MKL\\todolist\\src\\components\\InputForm\\InputForm.jsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":25},{"ruleId":"43","severity":1,"message":"47","line":3,"column":8,"nodeType":"45","messageId":"46","endLine":3,"endColumn":13},{"ruleId":"43","severity":1,"message":"48","line":4,"column":8,"nodeType":"45","messageId":"46","endLine":4,"endColumn":15},{"ruleId":"43","severity":1,"message":"49","line":1,"column":27,"nodeType":"45","messageId":"46","endLine":1,"endColumn":36},{"ruleId":"43","severity":1,"message":"50","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":16},{"ruleId":"43","severity":1,"message":"51","line":4,"column":12,"nodeType":"45","messageId":"46","endLine":4,"endColumn":17},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Notes' is defined but never used.","'Counter' is defined but never used.","'useEffect' is defined but never used.","'ReactDOM' is defined but never used.","'state' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]